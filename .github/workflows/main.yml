name: Robot Framework Tests

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget https://storage.googleapis.com/chrome-for-testing-public/124.0.6367.201/linux64/chromedriver-linux64.zip
          unzip chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver
          
      - name: Run Robot Framework tests
        run: robot -d results Tests/LoginTests.robot || true 
        
      - uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: my-artifact
          path: results
  
      - name: Output artifact ID
        run:  echo 'Artifact ID is ${{ steps.artifact-upload-step.outputs.artifact-id }}'

      - uses: 8398a7/action-slack@v3
        with:
              status: custom
              custom_payload: |
                {
                  text: "Custom Field Check",
                  attachments: [{
                    "author_name": "8398a7@action-slack", // json
                    fallback: 'fallback',
                    color: 'good',
                    title: 'CI Result',
                    text: 'Succeeded',
                    fields: [{
                      title: 'lower case',
                      value: 'LOWER CASE CHECK'.toLowerCase(),
                      short: true
                    },
                    {
                      title: 'reverse',
                      value: 'gnirts esrever'.split('').reverse().join(''),
                      short: true
                    },
                    {
                      title: 'long title1',
                      value: 'long value1',
                      short: false
                    }],
                    actions: [{
                    }]
                  }]
                }        
        env:
              SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
