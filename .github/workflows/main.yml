name: Robot Framework Tests

on: 
  push:
  repository_dispatch:
    types: [trigger-web-tests]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget https://storage.googleapis.com/chrome-for-testing-public/124.0.6367.201/linux64/chromedriver-linux64.zip
          unzip chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver
          
      - name: Run Robot Framework tests
        run: robot -d results Tests/LoginTests.robot || true 

      - name: Generate Date String
        id: datestring
        run: echo "::set-output name=date::$(date +%Y%m%d_%H%M%S)"
      
      - name: Use Date in Folder Name
        run: |
          REPORT_DIR="${{ steps.datestring.outputs.date }}"
          echo $REPORT_DIR
          mkdir -p "reports/${REPORT_DIR}"
          mv results/* "reports/${REPORT_DIR}/"

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan 104.237.1.165 >> ~/.ssh/known_hosts
    
      - name: Copy files to the server
        run: scp -r reports/${{ steps.datestring.outputs.date }} atelier@104.237.1.165:automation-report/
        
      - uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: robotframework-reports-${{ github.run_number }}
          path: reports/**
          
      - name: Calculate Test Passing Rate
        id: calculate-rate
        run: |
                python -c "
                import xml.etree.ElementTree as ET
                tree = ET.parse(reports/${{ steps.datestring.outputs.date }}/output.xml)
                root = tree.getroot()
            
                total_tests = 0
                passed_tests = 0
            
                # Traverse the XML structure to find test case results
                for test in root.iter('test'):
                    total_tests += 1
                    # Check the status of the test case
                    status = test.find('status').attrib['status']
                    if status.lower() == 'pass':
                        passed_tests += 1
            
                # Calculate the passing rate
                if total_tests == 0:
                    return 0.0
                passing_rate = (passed_tests / total_tests) * 100
                print(f'Passing rate: {passing_rate:.2f}%')
                
                # Save the passing rate to the GitHub Actions output variable
                with open(os.environ['GITHUB_ENV'], 'a') as env_file:
                  env_file.write(f'PASSING_RATE={round(passing_rate, 2)}\\n')
                "

      - name: Display Passing Rate
        run: | 
          echo "Passing Rate: ${{ env.PASSING_RATE }}%"

      - name: Send message to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          LINK_SOURCE="https://healthy-strongly-wolf.ngrok-free.app/${{ steps.datestring.outputs.date }}/log.html"  # Your variable link source.
          PAYLOAD="{\"text\":\"Message from GitHub Actions: <${LINK_SOURCE}|Click here>\"}"
          curl -X POST -H 'Content-type: application/json' --data "$PAYLOAD" $SLACK_WEBHOOK_URL
