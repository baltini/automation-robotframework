name: Robot Framework Tests

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      REPORT_DIR : $(date +%Y%m%d_%H%M%S)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget https://storage.googleapis.com/chrome-for-testing-public/124.0.6367.201/linux64/chromedriver-linux64.zip
          unzip chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver
          
      - name: Run Robot Framework tests
        run: robot -d results Tests/LoginTests.robot || true 

      - name: Organize Reports
        run: |
            mkdir -p "reports/${REPORT_DIR}"
            mv results/* "reports/${REPORT_DIR}/"

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan 104.237.1.165 >> ~/.ssh/known_hosts
    
      - name: Copy files to the server
        run: scp -r reports/${REPORT_DIR} atelier@104.237.1.165:automation-report/
        
      - uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: robotframework-reports-${{ github.run_number }}
          path: reports/**
  
      - name: Output artifact ID
        run:  echo 'Artifact ID is ${{ steps.artifact-upload-step.outputs.artifact-id }}'

      - uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB}  results/log.html (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}`,
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always() # Pick up events even if the job fails or is canceled.
